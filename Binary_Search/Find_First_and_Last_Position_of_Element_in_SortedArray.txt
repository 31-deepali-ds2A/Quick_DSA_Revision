Given an array of integers nums sorted in non-decreasing order, find the starting and ending 
position of a given target value.
If target is not found in the array, return [-1, -1].


Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int start=-1,end=-1,c=0;
        int n=nums.size();
        int right=nums.size()-1;
        int left=0;
        while(left<=right){

            int mid=left+(right-left)/2;

            if(nums[mid]==target){
                int il=mid, jl=mid;
                while(il>=0 && target==nums[il]) il--;
                while(jl<n && target==nums[jl]) jl++;

                 start = il + 1;
                end = jl - 1;
                break;
            }
            else if(target>nums[mid]){
                left=mid+1;
            }
            else{
                right=mid-1;
            }
        }

        return {start,end};
    }
};