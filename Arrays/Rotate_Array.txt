Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.

// Approach 1

class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int size=nums.size();
        k=k%size;

        reverse(nums.begin(),nums.end());
        reverse(nums.begin(),nums.begin()+k);
        reverse(nums.begin()+k,nums.end());
    }
};

//Approach2
class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int size=nums.size();
        k=k%size;

        vector<int> temp;
        for(int i=size-1;i>=size-k;i--){
            temp.push_back(nums[i]);
            nums.pop_back();
        }
        vector<int> res;
        int n=temp.size();
        for(int i=n-1;i>=0;i--){
            res.push_back(temp[i]);
        }
        for(int i=0;i<size-k;i++){
            res.push_back(nums[i]);
        }
        nums=res;

        return ;
    }
};

//Approach3(TLE)

class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int size=nums.size();
        k=k%size;

        while(k>0){
            int t=nums[size-1];
            nums.pop_back();
            nums.insert(nums.begin(),t);
            k--;
        }
        return ;
    }
};