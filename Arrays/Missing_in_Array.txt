You are given an array arr[] of size n - 1 that contains distinct integers in the range from 1 to n (inclusive). This array represents a permutation of the integers from 1 to n with one element missing. Your task is to identify and return the missing element.

Approach1
class Solution {
  public:
    int missingNum(vector<int>& arr) {
        // code here
       
        int n=arr.size();
        
        int x1=0 ,x2=0;
        for(int i=1;i<=n+1;i++){
            x1^=i;
        }
        
        for(int i=0;i<n;i++){
            x2^=arr[i];
        }
        return x1^x2;
    
    }
};

Approach2

class Solution {
  public:
    int missingNum(vector<int>& arr) {
        // code here
       
        int n=arr.size();
        
       long long Esum= 1LL*(n+1)*(n+2)/2;
       long long Osum=0;
       for(int i=0;i<n;i++){
           Osum+=arr[i];
       }
       return Esum-Osum;
    }
};

Approach3

class Solution {
  public:
    int missingNum(vector<int>& arr) {
        // code here
        sort(arr.begin(),arr.end());
        int n=arr.size();
        
        for(int i=0;i<n;i++){
            if(arr[i]!=i+1){
                return i+1;
            }
        }
        return arr[n-1]+1;
    }
};